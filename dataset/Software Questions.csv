Question Number,Question,Answer,Category,Difficulty
1,What is the difference between compilation and interpretation?,Compilation translates source code into machine code creating an executable file. Interpretation translates and executes code line by line without an executable.,General Programming,Medium
2,Explain the concept of polymorphism.,"Polymorphism allows objects of different classes to be treated as objects of a common superclass, enabling method overriding.",General Programming,Medium
3,Define encapsulation and give an example.,"Encapsulation bundles data and methods in a class, restricting direct data access. Example: class with private data and public methods.",General Programming,Hard
4,"What is an abstract class, and how is it different from an interface?",An abstract class can't be instantiated and can have abstract and concrete methods. An interface only has method signatures without implementations.,General Programming,Medium
5,Describe the principles of Object-Oriented Programming (OOP).,"OOP principles include encapsulation, inheritance, polymorphism, and abstraction, promoting organized and maintainable code.",General Programming,Medium
6,What is the purpose of a constructor?,"A constructor initializes object properties upon class instantiation, ensuring a well-defined state.",General Programming,Medium
7,Explain the difference between stack and heap memory.,"Stack memory stores local variables and function calls; heap memory is for dynamic allocation. Stack operates in LIFO, heap managed manually or by garbage collection.",General Programming,Medium
8,"What is a design pattern, and can you name a few?","Design patterns are solutions to common design problems. Examples: Singleton, Factory, Observer, MVC.",General Programming,Medium
9,"Define the term ""DRY"" in software development.",DRY (Don't Repeat Yourself) advocates for avoiding code duplication by reusing existing code.,General Programming,Medium
10,What is the SOLID principle?,"SOLID represents five design principles for OOP: Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion.",General Program,Hard
11,What is the difference between an array and a linked list?,"An array has fixed size and stores elements in contiguous memory; a linked list consists of nodes with data and references, allowing dynamic size.",Data Structures,Easy
12,Explain the time complexity of an algorithm.,"Time complexity measures the time an algorithm takes relative to its input size, expressed in Big O notation.",Data Structures,Hard
13,Describe the difference between a binary search tree and a hash table.,"A binary search tree is hierarchical, maintaining order; a hash table maps keys to values for fast retrieval, without maintaining order.",Data Structures,Medium
14,What is a linked list and how does it work?,"A linked list is a series of nodes each containing data and a reference to the next node, allowing dynamic memory allocation and efficient insertions/deletions.",Data Structures,Medium
15,Explain the concept of recursion.,"Recursion is when a function calls itself to solve subproblems, with a base case to terminate recursion.",Data Structures,Medium
16,"What is Big O notation, and why is it important?","Big O notation describes the upper bound of algorithm time complexity, important for comparing efficiency and growth rates.",Data Structures,Medium
17,How do you perform a binary search on a sorted array?,"Binary search divides the search interval in half, repeatedly comparing the middle element to the target.",Data Structures,Hard
18,Discuss the advantages and disadvantages of different sorting algorithms.,Sorting algorithms vary in time/space complexity and stability. Quick Sort and Merge Sort are fast but more complex; Insertion and Bubble Sort are simple but slower.,Data Structures,Medium
19,Explain how a hash table works.,"A hash table uses a hash function to map keys to values in an array, allowing fast O(1) access.",Data Structures,Medium
20,What is dynamic programming?,"Dynamic programming solves complex problems by dividing them into smaller subproblems, avoiding redundant calculations.",Data Structures,Hard
21,What is the difference between Java and JavaScript?,"Java is a compiled, statically-typed language used for server-side, mobile, and desktop apps. JavaScript is an interpreted, dynamically-typed language for web development.",Languages and Frameworks,Medium
22,Describe the MVC architectural pattern.,"MVC divides an application into Model (data), View (UI), and Controller (input handling), promoting separation of concerns.",Languages and Frameworks,Medium
23,What is a RESTful API?,"RESTful API is a web service implementation using HTTP methods to perform CRUD operations on resources, adhering to stateless, client-server architecture.",Languages and Frameworks,Medium
24,"Explain the use of ""this"" keyword in JavaScript.","""this"" in JavaScript refers to the execution context, varying based on function calling, global scope, or event handlers.",Languages and Frameworks,Medium
25,What is a closure in programming?,A closure is a function with access to its outer scope variables even after the outer function has executed.,Languages and Frameworks,Medium
26,What are the differences between Python 2 and Python 3?,"Python 3 has print as a function, true division, Unicode support by default, and different syntax for exceptions, unlike Python 2.",Languages and Frameworks,Medium
27,Discuss the role of a package manager like npm or pip.,"Package managers manage installation, update, and dependency resolution of libraries, simplifying library management in development.",Languages and Frameworks,Hard
28,Explain the concept of multi-threading in Java.,"Multi-threading in Java allows concurrent execution of multiple threads, improving application responsiveness and performance.",Languages and Frameworks,Medium
29,What is a Singleton pattern?,"Singleton ensures a class has only one instance and provides a global access point to it, useful for shared resources.",Languages and Frameworks,Medium
30,What is a virtual function in C++?,"Virtual functions in C++ allow derived classes to override them, enabling runtime polymorphism and dynamic method dispatch.",Languages and Frameworks,Medium
31,"What is a database index, and why is it important?","A database index speeds up data retrieval, similar to a book's index, improving query performance.",Database and SQL,Medium
32,Explain the differences between SQL and NoSQL databases.,SQL databases use structured query language with a predefined schema; NoSQL databases store schema-less data with flexible models.,Database and SQL,Medium
33,What is a foreign key in a database?,"A foreign key links two tables by referring to the primary key in another table, ensuring referential integrity.",Database and SQL,Medium
34,Describe the ACID properties in database transactions.,"ACID: Atomicity (indivisible transactions), Consistency (consistent state transitions), Isolation (independent transactions), Durability (persisted changes).",Database and SQL,Hard
35,How do you optimize a SQL query for better performance?,"Optimize using indexes, efficient SQL, limiting data retrieval, analyzing query performance, and considering denormalization.",Database and SQL,Easy
36,What is normalization in database design?,"Normalization organizes data into separate tables to reduce redundancy and improve integrity, following normalization forms.",Database and SQL,Hard
37,Explain the difference between INNER JOIN and LEFT JOIN in SQL.,INNER JOIN returns matching rows from both tables; LEFT JOIN returns all rows from the left table and matching rows from the right.,Database and SQL,Medium
38,"What is a stored procedure, and when would you use one?","Stored procedures are precompiled SQL statements for data manipulation and logic, used for repetitive tasks and improving performance.",Database and SQL,Medium
39,"What is database denormalization, and when is it appropriate?","Denormalization introduces redundancy for performance, useful in read-heavy scenarios at the expense of storage and complexity.",Database and SQL,Medium
40,Discuss the advantages and disadvantages of using an ORM tool.,ORM simplifies database interactions and is language-agnostic. It can introduce performance overhead and may limit database features.,Database and SQL,Medium
41,What is the Document Object Model (DOM)?,"The DOM is a tree-like representation of a web page's structure, allowing manipulation of content, structure, and style via programming languages.",Web Development,Hard
42,Explain the difference between HTTP and HTTPS.,"HTTP is an unsecured data transmission protocol; HTTPS is secure, encrypting data in transit using SSL/TLS.",Web Development,Medium
43,What is CORS (Cross-Origin Resource Sharing)?,"CORS is a security measure allowing or restricting resources requested from another domain, managed via HTTP headers.",Web Development,Medium
44,Describe the purpose of a web server like Apache or Nginx.,"Web servers handle HTTP requests, serve content, manage security, routing, and can act as reverse proxies for application servers.",Web Development,Medium
45,"What is a cookie, and how does it work?","Cookies are data stored on the user's computer by the web server, sent with HTTP requests for session management, tracking, and storing preferences.",Web Development,Hard
46,What is a session in web development?,"A session maintains stateful information across multiple HTTP requests, typically for user authentication and data storage.",Web Development,Medium
47,Explain the concept of responsive web design.,"Responsive design ensures web content functions across different devices and screen sizes, using CSS media queries and flexible layouts.",Web Development,Medium
48,Describe the differences between GET and POST requests.,"GET requests retrieve data and include parameters in the URL; POST requests send data to the server, encapsulating data in the request body.",Web Development,Medium
49,What is the importance of SEO in web development?,"SEO enhances a website's visibility in search engine results, improving organic traffic and user reach through optimized content and structure.",Web Development,Medium
50,How does a web browser render a web page?,"Browsers parse HTML to create a DOM, fetch resources, build a rendering tree, apply CSS, calculate layout, and paint the page on the screen.",Web Development,Medium
51,"What is unit testing, and why is it important?","Unit testing evaluates individual code components, ensuring correctness and facilitating early defect detection.",Software Testing,Medium
52,Explain the difference between black-box and white-box testing.,Black-box tests functionality without internal code knowledge; white-box tests internal code logic and structure.,Software Testing,Hard
53,What is regression testing?,"Regression testing ensures new code changes don't break existing features, maintaining functionality over updates.",Software Testing,Easy
54,Describe the purpose of code reviews.,"Code reviews identify defects, improve quality, enforce standards, and facilitate knowledge sharing.",Software Testing,Hard
55,What is continuous integration (CI) and continuous delivery (CD)?,CI involves frequent code integration and testing; CD extends CI by deploying changes to production automatically after testing.,Software Testing,Medium
56,Explain the concept of code coverage in testing.,"Code coverage measures the extent of code tested, assessing test thoroughness and identifying untested areas.",Software Testing,Medium
57,What is a test case and how do you write one?,"A test case outlines test conditions, inputs, and expected results, structured with objective, steps, and documentation.",Software Testing,Medium
58,"What is load testing, and why is it necessary?","Load testing evaluates system performance under expected load conditions, identifying bottlenecks and scalability issues.",Software Testing,Medium
59,Describe the differences between manual and automated testing.,Manual testing is human-driven; suitable for exploratory and UX testing. Automated testing uses tools for repetitive tasks; suitable for regression and performance testing.,Software Testing,Hard
60,What is a bug tracking system?,"A bug tracking system logs, manages, and resolves issues in software development, ensuring systematic problem handling.",Software Testing,Medium
61,"What is Git, and how does it work?","Git is a distributed version control system for tracking changes in source code, allowing collaborative work and branch management.",Version Control,Medium
62,Explain the difference between Git and SVN (Subversion).,"Git is distributed, with local repository copies; SVN is centralized, requiring network connectivity for repository access.",Version Control,Hard
63,"What is a merge conflict, and how do you resolve it in Git?",Merge conflicts occur when changes in different branches clash. Resolve by manually editing files and committing the result.,Version Control,Medium
64,Describe the purpose of branching in version control.,"Branching isolates development work without affecting other parts of the repository, aiding in feature development and experimentation.",Version Control,Medium
65,"What is a pull request (PR), and how does it work?","A PR is a request to merge code from one branch to another, facilitating code review and discussion before integration.",Version Control,Medium
66,How do you handle code conflicts in a team project?,"Resolve code conflicts through communication, careful review, manual merging, testing, and documenting resolutions.",Version Control,Medium
67,"What is code refactoring, and why is it important?","Refactoring improves code structure and readability without altering functionality, enhancing maintainability and quality.",Version Control,Medium
68,Explain the role of Git branching strategies like GitFlow.,"GitFlow organizes branches and releases, defining naming conventions and branch purposes for structured and organized development.",Version Control,Medium
69,"What is Git rebase, and when would you use it?",Git rebase re-applies commits onto another base for a cleaner history. Use with caution to maintain a linear project history.,Version Control,Hard
70,Discuss the advantages of distributed version control systems.,"Distributed systems allow offline work, flexible branching/merging, faster operations, redundancy, and collaborative workflows.",Version Control,Medium
71,Describe the concept of microservices architecture.,"Microservices architecture consists of small, independent services communicating via APIs, each responsible for specific functionality, promoting scalability and maintenance.",System Design,Medium
72,"What is a load balancer, and why is it used in web applications?","A load balancer distributes incoming traffic across servers, ensuring resource efficiency, fault tolerance, and high availability.",System Design,Medium
73,Explain the importance of caching in web applications.,"Caching stores frequently accessed data for faster retrieval, reducing backend load, improving performance, and enhancing user experience.",System Design,Medium
74,What is a CDN (Content Delivery Network)?,"A CDN is a network of servers for delivering content efficiently to users based on geographic proximity, reducing latency and load times.",System Design,Medium
75,Discuss the pros and cons of monolithic vs. microservices architecture.,Monolithic is simple but less scalable; microservices offer scalability and flexibility but are complex to manage.,System Design,Medium
76,What is a stateless vs. stateful service?,"Stateless services don't retain client data between requests; stateful services maintain client state, useful for sessions and transactions.",System Design,Hard
77,Explain the concept of CAP theorem in distributed systems.,"The CAP theorem states that in a distributed system, you cannot simultaneously guarantee Consistency, Availability, and Partition Tolerance at all times.",System Design,Easy
78,How do you ensure data consistency in a distributed database?,"Ensure consistency using strong consistency models, two-phase commits, optimistic concurrency control, and conflict resolution strategies.",System Design,Hard
79,Describe the role of a reverse proxy in a web application.,"A reverse proxy routes client requests to appropriate servers, providing load balancing, SSL termination, caching, and security.",System Design,Medium
80,"What is a message broker, and when would you use one?","A message broker facilitates communication in distributed systems through asynchronous messaging, used in event-driven architectures and high-volume scenarios.",System Design,Medium
81,"What is SQL injection, and how can it be prevented?","SQL injection exploits vulnerabilities to execute malicious SQL. Prevent with parameterized queries, input validation, and least privilege access.",Security,Medium
82,Explain the concept of Cross-Site Scripting (XSS).,"XSS injects malicious scripts into web apps, executed by users' browsers. Prevent with input validation, output encoding, and CSP.",Security,Medium
83,What is two-factor authentication (2FA)?,2FA adds extra security by requiring two verification forms: something known (password) and something possessed (device).,Security,Hard
84,Describe the process of password hashing and salting.,"Hashing transforms passwords into hashes using algorithms; salting adds randomness, enhancing security against attacks.",Security,Medium
85,"What is OAuth, and how does it work?","OAuth allows third-party app access to user data without exposing credentials, using access tokens for authorization.",Security,Medium
86,How do you protect against session fixation attacks?,"Protect by regenerating session IDs post-authentication, using unpredictable IDs, and tying IDs to user authentication.",Security,Medium
87,Explain the principles of least privilege and defense in depth.,Least privilege limits access rights; defense in depth layers security. Both minimize attack surfaces and provide redundancy.,Security,Hard
88,What is a DDoS (Distributed Denial of Service) attack?,"A DDoS attack overwhelms a target with traffic, causing unavailability. Mitigate with DDoS protection, rate limiting, and traffic analysis.",Security,Medium
89,How can you secure sensitive data in a mobile app?,"Secure data by encrypting at rest and in transit, using secure authentication, and following best practices.",Security,Medium
90,Discuss the importance of security in API design.,"API security is vital to protect data and prevent unauthorized access, using authentication, validation, rate limiting, and encryption.",Security,Medium
91,"What is Docker, and how does it work?","Docker is a containerization platform packaging applications with dependencies, ensuring consistent environments across systems.",DevOps,Medium
92,Explain the concept of container orchestration.,"Container orchestration automates deployment, scaling, and management of containers, optimizing resource use and handling failures.",DevOps,Medium
93,"What is Kubernetes, and why is it popular in container management?","Kubernetes is an open-source container orchestration platform automating deployment and management, known for its scalability and community support.",DevOps,Medium
94,Describe the process of continuous integration and continuous delivery (CI/CD).,"CI/CD automates build, test, and deployment processes, delivering code changes rapidly and reliably to production.",DevOps,Hard
95,What is infrastructure as code (IaC)?,"IaC manages infrastructure using code, ensuring consistency, automation, and version control in deployments.",DevOps,Easy
96,How do you monitor the performance of a web application?,"Monitor using tools to collect and analyze data on response times, resource utilization, error rates, and user experience.",DevOps,Hard
97,Discuss the importance of automated testing in CI/CD pipelines.,"Automated testing in CI/CD ensures code changes are defect-free, enhancing reliability and speeding up delivery.",DevOps,Medium
98,"What is Blue-Green deployment, and when would you use it?",Blue-Green deployment alternates between two production environments for easy rollbacks and minimal downtime during updates.,DevOps,Medium
99,Explain the role of a configuration management tool like Ansible.,"Configuration management tools automate provisioning and management of software and infrastructure, ensuring consistency and efficiency.",DevOps,Medium
100,"Describe the benefits of using a cloud platform like AWS, Azure, or Google Cloud.","Cloud platforms offer scalability, cost-efficiency, global reach, and managed services, reducing operational burdens with security and compliance features.",DevOps,Medium
101,Explain the concept of 'closure' in JavaScript.,A closure is a function that remembers its outer variables and can access them.,Front-end,Hard
102,Describe the use of Docker in a DevOps environment.,"Docker allows for packaging applications in containers, facilitating consistent deployment across different environments.",DevOps,Medium
103,What is a 'race condition' in software development?,A race condition occurs when the system's behavior depends on the sequence or timing of other uncontrollable events.,Back-end,Medium
104,How would you optimize a website's load time?,"Optimizations can include minimizing HTTP requests, using CDNs, compressing files, caching, etc.",Front-end,Hard
105,What is the difference between SQL and NoSQL databases?,"SQL databases are structured, use SQL, and are better for complex queries. NoSQL databases are flexible, scale well, and are good for hierarchical data storage.",Back-end,Medium
106,Can you explain the concept of 'state' in React?,State in React is an object that holds some information that may change over the lifecycle of the component.,Front-end,Medium
107,What is continuous integration in DevOps?,Continuous integration is the practice of automating the integration of code changes into a software project.,DevOps,Medium
108,How do you implement a binary search algorithm?,"Binary search involves repeatedly dividing in half the portion of the list that could contain the item, until you've narrowed the possibilities to just one.",Full-stack,Medium
109,Describe the MVC architecture.,"MVC architecture stands for Model-View-Controller, separating the application into three interconnected components.",Full-stack,Medium
110,What are microservices and how do they differ from monolithic architectures?,"Microservices are a software development technique�a variant of the service-oriented architecture architectural style that structures an application as a collection of loosely coupled services. In a monolithic architecture, all components are interconnected and interdependent.",Back-end,Medium
111,Explain the difference between '==' and '===' in JavaScript.,"'==' compares values after type conversion, while '===' compares both value and type.",Front-end,Hard
112,What is Kubernetes and how does it relate to containerization?,"Kubernetes is an open-source platform for automating deployment, scaling, and operations of application containers across clusters of hosts.",DevOps,Medium
113,Describe how you would implement a RESTful API in a back-end application.,"A RESTful API is implemented by setting up HTTP routes (GET, POST, PUT, DELETE) and handling requests and responses in a stateless manner, often using JSON.",Back-end,Medium
114,What are the benefits of server-side rendering vs client-side rendering?,"Server-side rendering improves initial page load time and SEO, while client-side rendering is good for dynamic websites with less initial loading content.",Front-end,Medium
115,How do NoSQL databases handle data scaling compared to traditional SQL databases?,NoSQL databases are generally more scalable and provide superior performance for large-scale applications due to their flexibility in handling unstructured data.,Back-end,Medium
116,Explain the use of hooks in React.,Hooks are functions that let you 'hook into' React state and lifecycle features from function components.,Front-end,Medium
117,What is Infrastructure as Code (IaC) and its significance in DevOps?,"IaC is the management of infrastructure (networks, virtual machines, load balancers, etc.) in a descriptive model, using code, which increases development and deployment speed.",DevOps,Medium
118,Describe the process of memoization in programming.,Memoization is an optimization technique used to speed up programs by storing the results of expensive function calls.,Full-stack,Hard
119,What are the advantages of using a microservices architecture?,"Advantages include easier scalability, flexibility in choosing technology, better fault isolation, and improved continuous deployment.",Back-end,Easy
120,Explain the SOLID principles in software engineering.,"SOLID stands for Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion principles, guiding towards more maintainable, understandable, and flexible software.",Full-stack,Hard
121,What is lazy loading in web development?,"Lazy loading is a design pattern that delays loading of non-critical resources at page load time, reducing initial load time and page weight.",Front-end,Medium
122,Discuss the role of a load balancer in a distributed system.,A load balancer distributes network or application traffic across multiple servers to enhance responsiveness and availability of applications.,DevOps,Medium
123,How does indexing improve database query performance?,"Indexing speeds up data retrieval operations by effectively creating a smaller, faster version of the database table.",Back-end,Medium
124,Explain event delegation in JavaScript.,Event delegation refers to the practice of using a single event listener to manage all events of a specific type for child elements.,Front-end,Medium
125,Explain the concept of 'closure' in JavaScript.,A closure is a function that remembers its outer variables and can access them.,Front-end,Hard
126,Describe the use of Docker in a DevOps environment.,"Docker allows for packaging applications in containers, facilitating consistent deployment across different environments.",DevOps,Medium
127,What is a 'race condition' in software development?,A race condition occurs when the system's behavior depends on the sequence or timing of other uncontrollable events.,Back-end,Hard
128,How would you optimize a website's load time?,"Optimizations can include minimizing HTTP requests, using CDNs, compressing files, caching, etc.",Front-end,Medium
129,What is the difference between SQL and NoSQL databases?,"SQL databases are structured, use SQL, and are better for complex queries. NoSQL databases are flexible, scale well, and are good for hierarchical data storage.",Back-end,Medium
130,Can you explain the concept of 'state' in React?,State in React is an object that holds some information that may change over the lifecycle of the component.,Front-end,Medium
131,What is continuous integration in DevOps?,Continuous integration is the practice of automating the integration of code changes into a software project.,DevOps,Medium
132,How do you implement a binary search algorithm?,"Binary search involves repeatedly dividing in half the portion of the list that could contain the item, until you've narrowed the possibilities to just one.",Full-stack,Medium
133,Describe the MVC architecture.,"MVC architecture stands for Model-View-Controller, separating the application into three interconnected components.",Full-stack,Medium
134,What are microservices and how do they differ from monolithic architectures?,"Microservices are a software development technique�a variant of the service-oriented architecture architectural style that structures an application as a collection of loosely coupled services. In a monolithic architecture, all components are interconnected and interdependent.",Back-end,Hard
135,Explain the difference between '==' and '===' in JavaScript.,"'==' compares values after type conversion, while '===' compares both value and type.",Front-end,Easy
136,What is Kubernetes and how does it relate to containerization?,"Kubernetes is an open-source platform for automating deployment, scaling, and operations of application containers across clusters of hosts.",DevOps,Hard
137,Describe how you would implement a RESTful API in a back-end application.,"A RESTful API is implemented by setting up HTTP routes (GET, POST, PUT, DELETE) and handling requests and responses in a stateless manner, often using JSON.",Back-end,Medium
138,What are the benefits of server-side rendering vs client-side rendering?,"Server-side rendering improves initial page load time and SEO, while client-side rendering is good for dynamic websites with less initial loading content.",Front-end,Medium
139,How do NoSQL databases handle data scaling compared to traditional SQL databases?,NoSQL databases are generally more scalable and provide superior performance for large-scale applications due to their flexibility in handling unstructured data.,Back-end,Medium
140,Explain the use of hooks in React.,Hooks are functions that let you 'hook into' React state and lifecycle features from function components.,Front-end,Medium
141,What is Infrastructure as Code (IaC) and its significance in DevOps?,"IaC is the management of infrastructure (networks, virtual machines, load balancers, etc.) in a descriptive model, using code, which increases development and deployment speed.",DevOps,Hard
142,Describe the process of memoization in programming.,Memoization is an optimization technique used to speed up programs by storing the results of expensive function calls.,Full-stack,Medium
143,What are the advantages of using a microservices architecture?,"Advantages include easier scalability, flexibility in choosing technology, better fault isolation, and improved continuous deployment.",Back-end,Medium
144,Explain the SOLID principles in software engineering.,"SOLID stands for Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion principles, guiding towards more maintainable, understandable, and flexible software.",Full-stack,Hard
145,What is lazy loading in web development?,"Lazy loading is a design pattern that delays loading of non-critical resources at page load time, reducing initial load time and page weight.",Front-end,Medium
146,Discuss the role of a load balancer in a distributed system.,A load balancer distributes network or application traffic across multiple servers to enhance responsiveness and availability of applications.,DevOps,Medium
147,How does indexing improve database query performance?,"Indexing speeds up data retrieval operations by effectively creating a smaller, faster version of the database table.",Back-end,Medium
148,Explain event delegation in JavaScript.,Event delegation refers to the practice of using a single event listener to manage all events of a specific type for child elements.,Front-end,Medium
149,Explain the concept of 'closure' in JavaScript.,A closure is a function that remembers its outer variables and can access them.,Front-end,Medium
150,Describe the use of Docker in a DevOps environment.,"Docker allows for packaging applications in containers, facilitating consistent deployment across different environments.",DevOps,Medium
151,Design a distributed key-value store.,"Focus on data partitioning, replication for fault tolerance, consistency models, and handling node failures.",System Design,Hard
152,Implement a function to check if a binary tree is balanced.,Use a recursive function to check the height of each subtree; return false if the difference is more than one.,Algorithms,Hard
153,Design a URL shortening service like bit.ly.,"Consider efficient hashing, collision resolution, database schema, scalability, and API rate limiting.",System Design,Hard
154,Design a recommendation system for a large e-commerce platform.,"Use collaborative filtering, content-based filtering, or hybrid methods; consider scalability and real-time processing.",Machine Learning,Hard
155,Write an algorithm to find the median of a stream of numbers.,"Use two heaps (max heap for lower half, min heap for upper half) to maintain the median.",Algorithms,Hard
156,Explain the Raft consensus algorithm.,"Discuss leader election, log replication, safety, and how Raft achieves consensus in a distributed system.",Distributed Systems,Hard
157,"Optimize a global, high-traffic content delivery network.","Use strategies like caching, edge locations, load balancing, and optimizing routing and data compression.",Networking,Hard
158,Design a chat application that can scale to millions of users.,"Consider websocket protocol for real-time communication, efficient message broadcasting, and scalable backend architecture.",System Design,Hard
159,Implement a garbage collector for a programming language.,"Understand memory management concepts like mark-and-sweep, reference counting, and generational collection.",Low-level Systems,Hard
160,Design a scalable notification system for a social network.,"Focus on system architecture, push vs. pull models, handling peak loads, database optimization, and message queuing.",System Design,Hard
161,Explain the workings of the TCP protocol for a low-latency network.,"Focus on the three-way handshake, congestion control (like TCP Fast Open, and CUBIC), and optimizing for reduced latency.",Networking,Hard
162,Design and implement a concurrent hash map.,Implement with fine-grained locking or lock-free techniques to ensure thread safety and high concurrency.,Data Structures,Hard
163,Find the Kth largest element in a stream of numbers.,"Utilize a min-heap to keep track of the K largest elements, ensuring efficient insertion and extraction.",Algorithms,Hard
164,Implement Google's PageRank algorithm.,Use graph-based algorithms focusing on eigenvector calculation and iterative approaches.,Algorithms,Hard
165,Design an API rate limiter for a web service.,"Use token bucket or leaky bucket algorithms, consider distributed storage for scalability.",System Design,Hard
166,Optimize database queries for a high-traffic website.,"Focus on indexing, query optimization, using caching, database sharding, and efficient schema design.",Database Systems,Hard
167,Create a secure and scalable authentication system for a web application.,"Implement OAuth for third-party integrations, use JWT for stateless authentication, and ensure protection against common security vulnerabilities.",Security,Hard
168,Design a system for efficient storage and retrieval of large-scale time-series data.,"Optimize for write-heavy loads, use time-based partitioning, efficient indexing, and consider data compression techniques.",Database Systems,Hard
169,Explain how a blockchain works and how to implement one.,"Focus on cryptographic hashing, decentralized consensus algorithms (like Proof of Work), and the maintenance of a distributed ledger.",Distributed Systems,Hard
170,Design an efficient parking lot management system.,"Use object-oriented design principles, focus on efficiently handling different vehicle sizes, and optimizing space usage.",System Design,Hard
171,Develop a machine learning model to predict stock prices.,"Consider time series analysis, regression models, and reinforcement learning; pay attention to features and data preprocessing.",Machine Learning,Hard
172,Write a custom memory allocator for a C++ application.,"Discuss memory pool allocation, handling fragmentation, and optimizing for allocation/deallocation speed.",Low-level Systems,Hard
173,Design a real-time multiplayer online game architecture.,"Focus on handling high network traffic, efficient state synchronization, latency reduction, and scalability.",System Design,Hard
174,Implement a distributed file system.,"Address challenges in data distribution, replication, fault tolerance, consistency, and performance.",Distributed Systems,Hard
175,Optimize a search algorithm for a large dataset in a distributed environment.,Implement distributed searching algorithms like MapReduce for scalability and efficiency.,Algorithms,Hard
176,Design a data pipeline for processing big data in real-time.,"Utilize stream processing frameworks (like Apache Kafka, Spark Streaming), ensure fault tolerance, and manage backpressure.",Data Engineering,Hard
177,Build a high-frequency trading system and discuss its components.,"Focus on low latency, high throughput, reliable data feeds, order execution systems, and concurrent algorithms.",System Design,Hard
178,Develop a deep learning model to analyze and interpret medical images.,"Use convolutional neural networks, pay attention to dataset quality and preprocessing, and handle class imbalances.",Machine Learning,Hard
179,Create an AI that can play a complex board game at a competitive level.,"Implement advanced AI techniques like Monte Carlo Tree Search, deep learning, and reinforcement learning.",Artificial Intelligence,Hard
180,Design a fraud detection system for online transactions.,"Use machine learning for anomaly detection, implement rule-based systems for known fraud patterns, ensure real-time processing.",Security,Hard
181,Implement a distributed graph processing framework.,"Discuss vertex-centric computation, message passing between nodes, and optimizations for large-scale processing.",Distributed Systems,Hard
182,Design a global video streaming service like Netflix.,"Focus on CDN usage, adaptive bitrate streaming, content caching strategies, and handling peak traffic loads.",System Design,Hard
183,Create a system to efficiently match job seekers with job postings.,"Use NLP for parsing resumes, implement ranking algorithms, and optimize for search and matching efficiency.",Algorithms,Hard
184,Design and implement a large-scale distributed cache system.,"Consider consistency, data partitioning, eviction policies, and fault tolerance in distributed caching.",Distributed Systems,Hard
185,Optimize network protocols for a satellite communication system.,"Address latency, data loss, and bandwidth issues; optimize for long-distance and high-latency networks.",Networking,Hard
186,Develop an autonomous vehicle's path planning algorithm.,"Implement algorithms considering real-time obstacle avoidance, dynamic path adjustments, and efficient routing.",Algorithms,Hard
187,Design a scalable and reliable messaging system for a large corporation.,"Utilize message queues (like Kafka, RabbitMQ), ensure fault tolerance, and implement load balancing.",System Design,Hard
188,Implement a natural language processing algorithm to understand and answer user queries.,"Use NLP techniques like tokenization, parsing, and deep learning models for understanding and generating responses.",Machine Learning,Hard
189,Create an efficient algorithm for real-time anomaly detection in network traffic.,Implement statistical models or machine learning algorithms to detect unusual patterns indicative of anomalies.,Algorithms,Hard
190,Design a system to manage and process Internet of Things (IoT) data.,"Focus on handling large-scale data influx, real-time processing, data storage, and analytics.",System Design,Hard
191,Build a compiler for a new programming language.,"Discuss lexical analysis, parsing, syntax tree generation, semantic analysis, and code generation.",Low-level Systems,Hard
192,Implement a robust text editor with features like auto-complete and syntax highlighting.,"Consider efficient data structures for text storage (like gap buffers), and algorithms for syntax parsing.",Algorithms,Hard
193,Design a scalable infrastructure for an online advertising platform.,"Focus on handling high-volume traffic, data analytics, ad targeting algorithms, and ensuring low-latency responses.",System Design,Hard
194,Develop a machine learning algorithm to detect fake news on social media.,"Use NLP for text analysis, implement classification algorithms, and consider the challenge of unstructured data.",Machine Learning,Hard
195,Optimize an SQL database for a high-volume financial transaction system.,"Focus on transaction isolation levels, indexing strategies, query optimization, and database sharding.",Database Systems,Hard
196,Design a cloud-based virtual desktop infrastructure.,"Address virtualization technologies, resource allocation, security, and remote access protocols.",System Design,Hard
197,Create a real-time sports analytics system using sensor data.,"Utilize streaming data processing, machine learning for pattern recognition, and efficient data storage solutions.",Data Engineering,Hard
198,Implement a quantum algorithm for solving a well-known computational problem.,"Discuss quantum computing principles, qubit manipulation, and specific algorithms like Grover's or Shor's algorithm.",Algorithms,Hard
199,Design a secure mobile payment system for developing countries.,"Focus on security protocols, offline capabilities, user authentication, and low-resource optimizations.",Security,Hard
200,What is a process versus a thread?,A process is an independent program with its own memory space; a thread is a lightweight unit of execution within a process sharing memory.,Operating Systems,Easy
201,Explain context switching.,Context switching saves and restores CPU state to switch between processes or threads, enabling multitasking.,Operating Systems,Medium
202,What is virtual memory and why is it useful?,Virtual memory abstracts physical memory allowing larger address spaces and isolation; implemented via paging.,Operating Systems,Medium
203,Describe deadlock and its conditions.,Deadlock is when tasks wait indefinitely; Coffman conditions: mutual exclusion, hold and wait, no preemption, circular wait.,Operating Systems,Hard
204,Explain paging vs segmentation.,Paging splits memory into fixed-size pages; segmentation uses variable-size segments based on logical divisions.,Operating Systems,Medium
205,What is a syscall?,A system call is a controlled entry point to request kernel services from user space.,Operating Systems,Easy
206,What is a container vs a virtual machine?,Containers share the host OS kernel; VMs emulate hardware and run full guest OS instances.,Cloud,Easy
207,Explain IaaS vs PaaS vs SaaS.,IaaS provides infrastructure, PaaS provides a platform/runtime, SaaS provides complete applications over the internet.,Cloud,Easy
208,What is an AWS VPC?,A Virtual Private Cloud is an isolated network in AWS with subnets, route tables, and security controls.,Cloud,Medium
209,Describe security groups vs NACLs in AWS.,Security groups are stateful instance firewalls; NACLs are stateless subnet-level ACLs.,Cloud,Medium
210,How does AWS Auto Scaling work?,Monitors metrics to scale instances in/out based on policies to maintain performance and cost.,Cloud,Medium
211,What is CloudFront and when to use it?,CloudFront is AWS's CDN to cache and serve content from edge locations reducing latency.,Cloud,Easy
212,Explain GCP IAM roles.,IAM roles define permissions; primitive, predefined, and custom roles control access to resources.,Cloud,Medium
213,What is Azure Functions?,Serverless compute for event-driven code execution with automatic scaling.,Cloud,Easy
214,What is GraphQL and how differs from REST?,GraphQL lets clients query exactly the data they need with a typed schema; REST exposes fixed resources and endpoints.,APIs,Medium
215,Explain GraphQL resolvers.,Resolvers map schema fields to data fetch logic, executed per field request.,APIs,Medium
216,What is pagination and common strategies?,Paginating splits results; strategies include offset/limit, cursor-based, keyset pagination.,APIs,Medium
217,How do you version a REST API?,Use URI versioning, headers, or content negotiation; communicate deprecations and maintain compatibility.,APIs,Medium
218,What is idempotency in APIs?,An idempotent request yields the same result when repeated (e.g., PUT) preventing duplicate side effects.,APIs,Easy
219,Explain rate limiting strategies.,Token bucket, leaky bucket, fixed window, sliding window; often implemented at gateway level.,APIs,Medium
220,What is OAuth2 PKCE?,PKCE enhances OAuth for public clients by mitigating authorization code interception using code verifier/challenge.,Security,Medium
221,Explain JWT structure and validation.,JWT has header.payload.signature; validate signature, issuer, audience, expiry, and not-before.,Security,Medium
222,What is CSRF and how to prevent it?,Cross-Site Request Forgery abuses auth context; prevent with same-site cookies, CSRF tokens, and double-submit cookie.,Security,Medium
223,Explain HTTPS TLS handshake at high level.,Client and server negotiate protocol/ciphers, exchange keys, verify certificates, and derive session keys.,Security,Hard
224,What is HSTS?,HTTP Strict Transport Security forces HTTPS to prevent downgrade attacks and cookie hijacking.,Security,Easy
225,Describe symmetric vs asymmetric encryption.,Symmetric uses one key; asymmetric uses public/private key pairs for encryption and signatures.,Security,Easy
226,What is responsive images in web?,Use srcset, sizes, and modern formats (WebP/AVIF) to serve appropriate images for devices.,Front-end,Easy
227,Explain Web Vitals.,Core metrics (LCP, FID/INP, CLS) measuring loading, interactivity, and visual stability.,Front-end,Medium
228,What is hydration in React?,Hydration attaches event listeners to server-rendered HTML to make it interactive on the client.,Front-end,Medium
229,Explain React reconciliation.,Diffing algorithm compares virtual DOM trees to compute minimal updates.,Front-end,Hard
230,What is memoization in React (useMemo/useCallback)?,Caches values/functions to avoid expensive recalculations and rerenders for stable deps.,Front-end,Medium
231,Explain accessibility basics (a11y).,Use semantic HTML, ARIA roles, keyboard navigation, contrast, and proper labeling.,Front-end,Easy
232,What are service workers?,Background scripts enabling offline caching, push notifications, and network interception.,Front-end,Medium
233,Describe Android activity lifecycle.,onCreate→onStart→onResume→onPause→onStop→onDestroy manage UI and resources.,Mobile,Medium
234,What is ViewModel + LiveData in Android?,Architecture components for UI-related data with lifecycle awareness.,Mobile,Medium
235,Explain iOS MVC vs MVVM.,Patterns for separating concerns; MVVM uses bindings to reduce controller bloat.,Mobile,Medium
236,What is React Native bridge?,Bridge marshals data between JS and native threads to access platform APIs.,Mobile,Hard
237,Explain SQLite vs Room on Android.,Room is an ORM over SQLite providing compile-time checks and abstractions.,Mobile,Medium
238,What is Flutter widget tree?,Declarative UI composed of widgets; rebuilt on state changes.,Mobile,Easy
239,Explain ACID vs BASE.,ACID ensures strong consistency; BASE is basically available, soft state, eventual consistency.,Database Systems,Medium
240,What is sharding vs partitioning?,Sharding splits data across nodes; partitioning divides within a single database instance.,Database Systems,Medium
241,Explain replication lag and mitigation.,Delay between primary and replicas; mitigate with tuning, semi-sync, read-after-write strategies.,Database Systems,Hard
242,What is Bloom filter and use cases?,Probabilistic structure for membership tests with false positives; used in caches and databases.,Data Structures,Medium
243,Explain Trie and applications.,Prefix tree enabling fast string prefix queries; used in autocomplete and DNS.,Data Structures,Medium
244,What is a heap and typical operations?,Binary heap supports insert and extract-min/max in O(log n).,Data Structures,Easy
245,Describe union-find (disjoint set).,Supports union and find with path compression and union by rank for near O(1).,Data Structures,Medium
246,Explain backtracking with an example.,Systematically explores candidates (e.g., N-Queens) undoing choices when constraints fail.,Algorithms,Medium
247,What is dynamic programming memoization vs tabulation?,Top-down caches recursive calls; bottom-up builds solutions iteratively.,Algorithms,Easy
248,Explain Dijkstra vs A*.,Dijkstra finds shortest path; A* uses heuristic to guide search faster.,Algorithms,Medium
249,What is NP-Completeness?,Class of problems verifiable in polynomial time; NP-Complete are hardest in NP via reductions.,Algorithms,Hard
250,Explain CAP trade-offs for AP systems.,Favor availability and partition tolerance; use eventual consistency and conflict resolution.,Distributed Systems,Medium
251,What is leader election?,Protocol to choose a coordinator (e.g., Raft, Bully) in distributed systems.,Distributed Systems,Medium
252,Explain gossip protocols.,Epidemic-style information dissemination for scalability and robustness.,Distributed Systems,Hard
253,What is backpressure in streaming?,Mechanism to signal producers to slow down to avoid overwhelming consumers.,Data Engineering,Medium
254,Explain Kafka partitions and consumer groups.,Partitions enable parallelism; consumer groups scale consumption and provide fault tolerance.,Data Engineering,Medium
255,What is Spark lazy evaluation?,Transformations are lazy; actions trigger DAG execution enabling optimization.,Data Engineering,Medium
256,Explain feature scaling and why.,Normalizing/standardizing features improves model convergence and performance.,Machine Learning,Easy
257,What is bias-variance tradeoff?,Balance underfitting vs overfitting; use regularization, more data, or simpler models.,Machine Learning,Medium
258,Explain precision, recall, F1.,Precision measures correctness, recall measures completeness, F1 balances both.,Machine Learning,Easy
259,What is cross-validation?,Resampling technique (k-fold) to estimate model performance robustly.,Machine Learning,Easy
260,Explain ROC AUC.,Area under ROC curve summarizing TPR vs FPR trade-off.,Machine Learning,Medium
261,What is gradient descent?,Iterative optimization adjusting parameters opposite gradient to minimize loss.,Machine Learning,Easy
262,Explain container image layers.,Images are layered filesystems enabling caching and incremental builds.,DevOps,Easy
263,What is GitOps?,Managing infra/apps via Git as source of truth with automated reconciliations.,DevOps,Medium
264,Explain blue/green vs canary.,Blue/green swaps environments; canary gradually shifts traffic to new version.,DevOps,Medium
265,What is observability vs monitoring?,Observability uses logs, metrics, traces to infer system state; monitoring tracks known conditions.,DevOps,Medium
266,Explain Terraform state.,State tracks resource mappings; must be secured, locked, and versioned.,DevOps,Hard
267,What is rate-based WAF rule?,Web Application Firewall rule that blocks or throttles requests above a threshold.,Security,Medium
268,Explain CSP (Content Security Policy).,HTTP header restricting resource sources to mitigate XSS and injection.,Security,Medium
269,What is clickjacking and defense?,UI redress attack; defend with X-Frame-Options/SameSite cookies and frame-busting.,Security,Easy
270,Explain password stretching.,Increases hash computation cost (PBKDF2/bcrypt/scrypt/Argon2) to resist brute force.,Security,Medium
271,What is event loop in Node.js?,Single-threaded loop handling callbacks, I/O via libuv threadpool and epoll/kqueue.,Back-end,Medium
272,Explain NestJS modules and providers.,Modules organize providers/controllers; dependency injection manages services.,Back-end,Medium
273,What is CQRS?,Separates reads and writes into different models/services for scalability.,Back-end,Hard
274,Explain WebSockets vs SSE.,WebSockets are bidirectional; SSE is server-to-client unidirectional event stream.,Web Development,Medium
275,What is HTTP/2 multiplexing?,Allows multiple concurrent streams over one TCP connection reducing latency.,Web Development,Medium
276,Explain Cumulative Layout Shift (CLS).,Metric of visual stability; reduce with size attributes and reserved space.,Front-end,Medium
277,What is Tree Shaking?,Eliminates unused code in bundling via ES module static analysis.,Front-end,Medium
278,Explain code splitting.,Split bundles by route or component to reduce initial load time.,Front-end,Medium
279,What is a monorepo and tooling?,Single repo for multiple packages; tools like Nx, Turborepo manage builds and deps.,Full-stack,Medium
280,Explain serverless pitfalls.,Cold starts, vendor lock-in, observability challenges, and limits on execution time.,Full-stack,Medium
281,What is edge computing?,Processing closer to users to reduce latency and bandwidth with CDNs/edge runtimes.,System Design,Medium
282,Explain idempotent consumers.,Consumers that handle duplicate messages safely by de-duplication or transactional reads.,System Design,Hard
283,What is SAGA pattern?,Manages distributed transactions via compensating actions across services.,System Design,Hard
284,Explain chaos engineering.,Practice of injecting failures to test resilience and observability.,System Design,Medium
285,What is time complexity of QuickSort average and worst?,Average O(n log n), worst O(n^2) when pivot choices are bad.,Algorithms,Easy
286,Explain hashmap collision resolution.,Techniques include chaining and open addressing (linear/quadratic probing, double hashing).,Data Structures,Easy
287,What is a semaphore?,Synchronization primitive controlling access to resources via counters.,Operating Systems,Medium
288,Explain copy-on-write.,Optimization deferring copying until mutation; used in forks and filesystems.,Operating Systems,Medium
289,What is eventual consistency?,Guarantee that replicas converge; reads may be stale temporarily.,Distributed Systems,Easy
290,Explain CDN cache invalidation strategies.,Time-based TTLs, cache-busting URLs, and explicit purge APIs.,Web Development,Medium
291,What is OpenID Connect?,Identity layer over OAuth 2.0 providing authentication via ID tokens.,Security,Medium
292,Explain message idempotency keys.,Unique keys to prevent duplicate processing in distributed systems.,System Design,Medium
293,What is a circuit breaker?,Pattern that stops calls to failing services until recovery to prevent cascading failures.,System Design,Medium
294,Explain backoff with jitter.,Randomized delays between retries to avoid thundering herd.,System Design,Easy
295,What is a shadow deployment?,Mirrors traffic to a new version without impacting users for validation.,DevOps,Hard
296,Explain binary serialization formats.,Protobuf/Avro/Thrift are compact, schema-driven formats improving performance.,Back-end,Medium
297,What is gRPC?,High-performance RPC framework using HTTP/2 and Protobuf, supports streaming.,Back-end,Medium
298,Explain OAuth scopes and consent.,Scopes limit token permissions; users grant consent to specific access.,Security,Easy
299,What is SSO?,Single Sign-On lets users authenticate once to access multiple applications.,Security,Easy
300,Explain domain-driven design (DDD) bounded contexts.,Define clear boundaries for models and ubiquitous language to avoid coupling.,Architecture,Hard
301,Tell me about yourself.,Provide a concise professional summary highlighting key experiences, strengths, and goals.,Behavioral,Easy
302,Describe a challenging situation you faced at work.,Explain the context, your actions, obstacles, and the measurable outcome (STAR).,Behavioral,Medium
303,How do you handle tight deadlines?,Discuss prioritization, breaking tasks, communication with stakeholders, and delivering MVPs.,Behavioral,Easy
304,Give an example of a time you showed leadership.,Describe setting direction, aligning team, removing blockers, and outcomes.,Behavioral,Medium
305,Tell me about a time you failed.,Own the mistake, explain learnings, corrective actions, and prevented recurrence.,Behavioral,Medium
306,How do you handle conflict with a teammate?,Explain empathy, active listening, focusing on shared goals, and negotiation.,Behavioral,Easy
307,Describe a time you went above and beyond.,Show initiative, impact on customers or team, and metrics.,Behavioral,Easy
308,How do you prioritize tasks when everything is important?,Explain frameworks (Eisenhower, RICE), clarify requirements, and stakeholder alignment.,Behavioral,Medium
309,Tell me about a time you influenced without authority.,Discuss persuasion, data, building allies, and outcome.,Behavioral,Hard
310,How do you handle ambiguous requirements?,Explain clarifying questions, prototypes, assumptions, and iterative validation.,Behavioral,Medium
311,Describe a time you improved a process.,Detail baseline metrics, change implemented, measurement, and sustained results.,Behavioral,Medium
312,How do you handle negative feedback?,Emphasize growth mindset, specific example, action plan, and improvement.,Behavioral,Easy
313,Tell me about a time you mentored someone.,Discuss goals, coaching approach, feedback loops, and growth outcomes.,Behavioral,Medium
314,Describe a time you managed multiple stakeholders.,Explain mapping interests, communication cadence, and risk management.,Behavioral,Hard
315,What motivates you at work?,Tie motivation to impact, learning, team success, and company mission.,Behavioral,Easy
316,How do you handle stress?,Describe routines, planning, communication, and seeking help early.,Behavioral,Easy
317,Tell me about a time you delivered under constraints.,Highlight trade-offs, scope control, risk mitigation, and delivery.,Behavioral,Medium
318,Describe a time you disagreed with a decision.,Explain respectful challenge, data, alignment, and commitment post-decision.,Behavioral,Medium
319,How do you ensure quality while moving fast?,Talk about automation, code reviews, feature flags, and monitoring.,Behavioral,Medium
320,Give an example of customer obsession.,Describe gathering insights, acting on feedback, and measurable customer impact.,Behavioral,Medium
321,Tell me about a time you managed a production incident.,Cover detection, triage, communication, remediation, and postmortem.,Behavioral,Hard
322,Describe a time you had to learn something quickly.,Explain learning plan, resources, application, and results.,Behavioral,Easy
323,How do you collaborate with cross-functional teams?,Discuss shared goals, clear ownership, regular syncs, and documentation.,Behavioral,Easy
324,Give an example of data-driven decision making.,Explain hypothesis, data collected, analysis, decision, and impact.,Behavioral,Medium
325,Tell me about a time you reduced costs.,Describe optimization, trade-offs, and quantified savings.,Behavioral,Medium
326,Describe a situation where you handled a difficult stakeholder.,Explain empathy, boundaries, escalation paths, and outcomes.,Behavioral,Hard
327,How do you ensure inclusivity on your team?,Discuss psychological safety, equitable meetings, and recognizing contributions.,Behavioral,Medium
328,Tell me about a time you managed up.,Explain proactive updates, risk surfacing, and expectation alignment.,Behavioral,Medium
329,Describe a time you identified a risk early.,Discuss monitoring, signaling, mitigation plan, and avoided impact.,Behavioral,Medium
330,How do you balance short-term and long-term goals?,Explain roadmap, milestones, and technical debt management.,Behavioral,Hard
331,Give an example of ownership.,Describe taking responsibility beyond role, end-to-end delivery, and impact.,Behavioral,Medium
332,How do you handle scope creep?,Discuss change control, negotiation, re-prioritization, and documentation.,Behavioral,Medium
333,Tell me about a time you improved team morale.,Explain recognition, rituals, feedback culture, and outcomes.,Behavioral,Medium
334,Describe a time you handled confidential information.,Discuss discretion, least privilege, and compliance.,Behavioral,Easy
335,How do you onboard quickly to a new codebase?,Explain reading docs, running locally, small PRs, and mentors.,Behavioral,Easy
336,Tell me about a time you resolved a blocker.,Explain root cause analysis, alternatives, and stakeholder alignment.,Behavioral,Medium
337,Describe a time you negotiated trade-offs.,Discuss constraints, options, data, and decision rationale.,Behavioral,Hard
338,How do you handle repetitive tasks?,Automation, batching, and proposing efficient workflows.,Behavioral,Easy
339,Give an example of bias for action.,Describe swift decision with limited info, risk handling, and result.,Behavioral,Medium
340,Tell me about a time you improved reliability.,Explain SLOs, error budgets, incident trends, and fixes.,Behavioral,Hard
341,Design a URL shortener service,Discuss ID generation hashing collision handling read heavy caching database schema and rate limiting,System Design,Medium
342,Design a news feed system,Explain fanout on write vs read ranking signals feed aggregation and storage,System Design,Hard
343,Design a ride sharing dispatch system,Discuss real time location updates matching surge pricing and consistency,System Design,Hard
344,Design a scalable chat service,Cover WebSocket vs long polling message delivery ordering persistence and online presence,System Design,Medium
345,Design a file storage service like Dropbox,Explain client sync metadata service chunking deduplication and sharing,System Design,Hard
346,Design a search autocomplete,Discuss trie prefix index ranking latency budgets and abuse prevention,System Design,Medium
347,Design rate limiting for an API,Explain token bucket leaky bucket distributed counters and eviction,System Design,Medium
348,Design a metrics collection system,Cover agents ingestion queues time series storage rollups and dashboards,System Design,Hard
349,Design a payment processing system,Discuss idempotency consistency PCI concerns retries and reconciliation,System Design,Hard
350,Design a notification system,Explain push vs pull fanout preferences batching and delivery guarantees,System Design,Medium
351,Design a CDN,Discuss edge caching invalidation origin shielding and content routing,System Design,Hard
352,Design a video streaming platform,Explain encoding ABR CDN storage and session management,System Design,Hard
353,Design a rate based fraud detection pipeline,Cover streaming features model serving feedback loop and latency,System Design,Hard
354,Design a logging platform,Discuss ingestion indexing retention search and multi tenant isolation,System Design,Medium
355,Design a feature flag service,Explain evaluation rollout audit and low latency cache, System Design,Easy
356,Design a leaderboard for games,Discuss ranking real time updates sharding and anti cheating,System Design,Medium
357,Design an e commerce cart service,Explain session handling inventory consistency and promotions,System Design,Medium
358,Design a URL crawler,Discuss politeness deduplication frontier scheduling and storage,System Design,Hard
359,Design a real time collaboration editor,Explain CRDT vs OT concurrency presence and persistence,System Design,Hard
360,Design a job scheduler,Discuss priorities retries backoff and distributed locks,System Design,Medium
361,Market sizing for a food delivery startup,Estimate market using top down and bottom up assumptions with clear model,Case Study,Medium
362,Improve conversion funnel for a SaaS product,Analyze funnel metrics form friction pricing experiments and expected impact,Case Study,Medium
363,Reduce churn for a subscription app,Identify segments reasons interventions and success metrics,Case Study,Medium
364,Optimize delivery routes,Propose constraints heuristics data needs and trade offs,Case Study,Hard
365,Increase marketplace liquidity,Design levers for supply demand balance metrics and monitoring,Case Study,Hard
366,Pricing strategy for a new feature,Outline experiments elasticity willingness to pay and guardrails,Case Study,Medium
367,Launch plan for a new geography,Define research GTM KPIs risks and rollout phases,Case Study,Medium
368,Customer support backlog reduction,Analyze inflow drivers automation deflection and staffing model,Case Study,Medium
369,Improve onboarding completion,Map user journey identify drop offs test changes and measure lift,Case Study,Easy
370,Drive adoption of a collaboration feature,Propose education prompts network effects and measurement plan,Case Study,Medium
371,Incident postmortem and remediation plan,Identify root cause impact fixes and long term actions with owners,Case Study,Easy
372,Lower cloud costs by 20 percent,Analyze spend hotspots rightsizing commitments architecture changes and risks,Case Study,Hard
373,Internationalization rollout plan,Detail scope localization testing and phased enablement with metrics,Case Study,Medium
374,Improve search relevance,Evaluate signals weighting experiments and success metrics,Case Study,Hard
375,Reduce support response time,Model staffing SLAs queues and async channels,Case Study,Medium
376,Define north star and input metrics,Propose metric tree alignment and dashboards,Case Study,Easy
377,Experiment design for new homepage,Define hypothesis variants sample size and power analysis,Case Study,Medium
378,Backlog prioritization for next quarter,Use RICE or ICE align with strategy and dependencies,Case Study,Medium
379,Retention improvement strategy,Segment cohorts lifecycle messaging and value moments,Case Study,Hard
380,Improve data quality across pipelines,Propose contracts validation observability and ownership,Case Study,Hard